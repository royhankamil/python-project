Key takeaways

1. You cannot add more than one anonymous (unnamed) except branch after the named ones.

:
# The code that always runs smoothly.
:
try:
    :
    # Risky code.
    :
except Except_1:
    # Crisis management takes place here.
except Except_2:
    # We save the world here.
except:
    # All other issues fall here.
:
# Back to normal.
:


2. All the predefined Python exceptions form a hierarchy, i.e. some of them are more general (the one named BaseException is the most general one) while others are more or less concrete (e.g. IndexError is more concrete than LookupError).

You shouldn't put more concrete exceptions before the more general ones inside the same except branche sequence. For example, you can do this:

try:
    # Risky code.
except IndexError:
    # Taking care of mistreated lists
except LookupError:
    # Dealing with other erroneous lookups


but don't do that (unless you're absolutely sure that you want some part of your code to be useless)

try:
    # Risky code.
except LookupError:
    # Dealing with erroneous lookups
except IndexError:
    # You'll never get here 


3. The Python statement raise ExceptionName can raise an exception on demand. The same statement, but lacking ExceptionName, can be used inside the try branch only, and raises the same exception which is currently being handled.
	raise akan mengembalikan program erorr 
	contoh : 
	def bad_fun(n):
  	  try:
 	       return n / 0
	    except:
        	print("I did it again!")
       	 raise


	try:
    		bad_fun(0)
	except ArithmeticError:
	    print("I see!")
output:
	I did it again!
	I see!
	THE END.

print("THE END.")


4. The Python statement assert expression evaluates the expression and raises the AssertError exception when the expression is equal to zero, an empty string, or None. You can use it to protect some critical parts of your code from devastating data.
	assert adalah dimana apabila suatu statement (bool) tertentu, yang apabila true tidak akan terjadi apa apa, tatapi kalau false akan terjadi erorrs



Key takeaways

1. Some abstract built-in Python exceptions are:

ArithmeticError,
BaseException,
LookupError.

2. Some concrete built-in Python exceptions are:

AssertionError,
ImportError,
IndexError,
KeyboardInterrupt,
KeyError,
MemoryError,
OverflowError.