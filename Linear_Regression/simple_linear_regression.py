import numpy as np
import matplotlib.pyplot as plt


# Fungsi untuk menghitung MSE
def mean_squared_error(Y_true, Y_pred):
    return np.mean((Y_true - Y_pred)**2)

# Data contoh
X = np.array([0.,  0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.,  1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7,
 1.8, 1.9, 2.,  2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.,  3.1, 3.2, 3.3, 3.4, 3.5,
 3.6, 3.7, 3.8, 3.9, 4.,  4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5.,  5.1, 5.2, 5.3,
 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6.,  6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7.,  7.1,
 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8.,  8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9,
 9.,  9.1, 9.2, 9.3, 9.4, 9.5, 9.6, 9.7, 9.8, 9.9])
Y = np.array([ 1.47966716e+00,  1.65828962e-01,  1.23313897e-01,  1.13355739e+00,
  1.55536233e+00,  1.97600341e+00, -8.26437835e-03,  9.99563491e-02,
  2.92204723e+00,  2.25164754e+00, -2.53451634e+00,  2.34351618e+00,
  1.31748765e+00,  1.30425827e+00,  2.16119961e-01,  8.98758230e-01,
  2.01188812e+00,  1.88139227e+00,  2.02855254e+00,  7.28106553e-01,
  2.63271128e+00,  2.46364749e+00,  1.68266491e+00,  1.83121521e+00,
  7.37534156e-01,  2.97101086e+00,  2.93465657e+00,  3.10507860e+00,
  1.32630774e+00,  8.99468957e-01,  4.31108465e+00,  2.17428964e+00,
  3.11085349e+00,  3.70494566e+00,  4.64219466e+00,  3.84083075e+00,
  4.07439318e+00,  4.81165540e+00,  3.44294192e+00,  3.42175428e+00,
  4.65438145e+00,  4.15849075e+00,  3.69636060e+00,  4.64510234e+00,
  4.64670847e+00,  3.82358394e+00,  5.73211298e+00,  3.51158487e+00,
  4.98806019e+00,  5.83595465e+00,  5.19794580e+00,  4.91442670e+00,
  5.36605982e+00,  4.64903317e+00,  4.10439598e+00,  5.43523052e+00,
  6.73927028e+00,  5.33396125e+00,  6.34492542e+00,  7.74170958e+00,
  6.28184701e+00,  6.94521164e+00,  6.02800833e+00,  6.29309370e+00,
  6.03275166e+00,  7.90462394e+00,  8.36996769e+00,  6.08915047e+00,
  4.51447417e+00,  6.12225712e+00,  7.37437562e+00,  5.05011708e+00,
  8.10056327e+00,  8.36289508e+00,  7.53576117e+00,  7.10807485e+00,
  7.71081102e+00,  5.12782048e+00,  7.47549191e+00,  8.48952659e+00,
  8.92865971e+00,  9.49250283e+00,  7.28626869e+00,  9.36170631e+00,
  7.98480952e+00,  8.56758496e+00,  8.68122618e+00,  7.47948720e+00,
  9.00204343e+00,  6.89926833e+00,  9.62910945e+00,  9.51059446e+00,
  1.13325640e+01,  9.00305340e+00,  8.09484841e+00,  9.84272061e+00,
  8.51674148e+00,  8.46562596e+00,  1.14302543e+01,  1.00419975e+01])

# Menghitung koefisien regresi dan intercept secara manual
mean_X = np.mean(X)
mean_Y = np.mean(Y)

b1 = np.sum((X - mean_X) * (Y - mean_Y)) / np.sum((X - mean_X) ** 2)
b0 = mean_Y - b1 * mean_X

# Membuat garis regresi
regression_line = b0 + b1 * X

# Menghitung MSE
mse = mean_squared_error(Y, regression_line)

# Menghitung R-squared
ssr = np.sum((regression_line - mean_Y)**2)
sst = np.sum((Y - mean_Y)**2)
r_squared = ssr / sst

print("Mean Squared Error (MSE):", mse)
print("R-squared (R^2):", r_squared)


# Membuat plot
plt.scatter(X, Y, color='blue', label='Data Observasi')
plt.plot(X, regression_line, color='red', label='Regresi Linear')
plt.xlabel('X (Variabel Independen)')
plt.ylabel('Y (Variabel Dependen)')
plt.title('Regresi Linear Sederhana')
plt.axis([0,10,0,10])
plt.legend()
plt.show()
